{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","children","sortList","listOfEmployers","sort","a","b","firstSalary","dataset","salary","split","join","secondSalary","forEach","person","append","getEmployees","employers","employer","name","innerText","push"],"mappings":"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","file":"main.3cb47eb1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\n\nconst list = document.querySelector('ul').children;\n// document.querySelectorAll('li');\n\nconst sortList = (listOfEmployers) => {\n  const sortedListBySalaries = [...listOfEmployers].sort((a, b) => {\n    const firstSalary = +a.dataset.salary\n      .split('$')[1]\n      .split(',')\n      .join('.');\n    const secondSalary = +b.dataset.salary\n      .split('$')[1]\n      .split(',')\n      .join('.');\n\n    return secondSalary - firstSalary;\n  });\n\n  sortedListBySalaries.forEach(person => {\n    return document.querySelector('ul').append(person);\n  });\n};\n\nconst getEmployees = listOfEmployers => {\n  const employers = [];\n\n  for (const person of listOfEmployers) {\n    const employer = {\n      name: person.innerText,\n      ...person.dataset,\n    };\n\n    employers.push(employer);\n  }\n\n  return employers;\n};\n\nsortList(list);\ngetEmployees(list);\n"]}